-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

{
  "name": "wordpress-k8s-rds",
  "version": "0.1.0",
  "description": "WordPress running in K8s connected to a provisioned RDS instance",
  "invocationImages": [
    {
      "imageType": "docker",
      "image": "gcr.io/bitnami-images/wordpress-k8s-rds-cnab:c2b6aa9ae19c8410f38b208f19c0503327ced202"
    }
  ],
  "images": [],
  "parameters": {
    "app-domain": {
      "type": "string",
      "defaultValue": "",
      "required": false,
      "metadata": {
        "description": "The domain used to expose the WordPress instance"
      },
      "destination": {
        "path": "",
        "env": "APP_DOMAIN"
      }
    },
    "app-tls": {
      "type": "bool",
      "defaultValue": false,
      "required": false,
      "metadata": {
        "description": "Set to true to add the required annotations for cert-manager"
      },
      "destination": {
        "path": "",
        "env": "APP_TLS"
      }
    },
    "aws-default-region": {
      "type": "string",
      "defaultValue": "us-west-2",
      "required": false,
      "metadata": {
        "description": "AWS region where the RDS database will be provisioned"
      },
      "destination": {
        "path": "",
        "env": "AWS_DEFAULT_REGION"
      }
    },
    "database-password": {
      "type": "string",
      "defaultValue": "",
      "required": false,
      "minLength": 10,
      "metadata": {
        "description": "Database password (alphanumeric, 10 chars minimum). If not set, a randomly generated password will be used"
      },
      "destination": {
        "path": "",
        "env": "DATABASE_PASSWORD"
      }
    }
  },
  "credentials": {
    "aws-access-key-id": {
      "path": "",
      "env": "AWS_ACCESS_KEY_ID"
    },
    "aws-secret-access-key": {
      "path": "",
      "env": "AWS_SECRET_ACCESS_KEY"
    },
    "kubeconfig": {
      "path": "/root/.kube/config",
      "env": ""
    }
  }
}
-----BEGIN PGP SIGNATURE-----

wsDcBAEBCAAQBQJcBaxaCRA6kfOOqDGW3QAAQkEMANd7tQgXDcYF8SeWWY7A+pJW
HG1DeXJ1RajLFqVOfmbXDmRpuixV1ef1D4Cbrrh41p2CzzJfWMoDY4Dgg+wrKw8Y
b22CFTpkMDW4DViMHjyn2qZ9oYQQQJZJTtjJ8xI1aKQBXSF3rMtp9CdQO1ZhPfIl
WLzzjjID8PaPMM4sPpcgxbXVNw8yy6oykEo7ig7PgonysrWDDYMfeKwz8YaAyLjQ
SUoT8eE+FtBaESa3oYrLCNWYU64ZeHoTMu9rup3jKXvP5Gbg7F/eVWBIkRRtx5RY
YpVHOTLZY81zrYtbro3uBG66DCbSHOLhSsPNF/KROL5BEGl7fcSFApOD5xsigj5H
KoxpentHN6cLktHJKdppE8wtwW77DczjBhXqq0PakO5lf6KZjexFdSpSPp2NHuUO
xCSSthAG2m3aRNW5N5m2NNJfWyMCa0+OpVjug95Re3rXXU35FmUT5xJe66MA89yU
G3/uT+CocbZSP76gpZHGTKV9qcn47IoWHq/Xr934nQ==
=J0W2
-----END PGP SIGNATURE-----
