-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

{
  "name": "wordpress-k8s-rds",
  "version": "0.1.0",
  "description": "WordPress running in K8s connected to a provisioned RDS instance",
  "invocationImages": [
    {
      "imageType": "docker",
      "image": "bitnami/wordpress-k8s-rds-cnab:c9913796fb9a878b45cdbe4419a6fa6b3bd72333"
    }
  ],
  "images": [],
  "parameters": {
    "app-domain": {
      "type": "string",
      "defaultValue": "",
      "required": false,
      "metadata": {
        "description": "The domain used to expose the WordPress instance"
      },
      "destination": {
        "path": "",
        "env": "APP_DOMAIN"
      }
    },
    "app-tls": {
      "type": "bool",
      "defaultValue": false,
      "required": false,
      "metadata": {
        "description": "Set to true to add the required annotations for cert-manager"
      },
      "destination": {
        "path": "",
        "env": "APP_TLS"
      }
    },
    "aws-default-region": {
      "type": "string",
      "defaultValue": "us-west-2",
      "required": false,
      "metadata": {
        "description": "AWS region where the RDS database will be provisioned"
      },
      "destination": {
        "path": "",
        "env": "AWS_DEFAULT_REGION"
      }
    },
    "database-password": {
      "type": "string",
      "defaultValue": "",
      "required": false,
      "minLength": 10,
      "metadata": {
        "description": "Database password (alphanumeric, 10 chars minimum). If not set, a randomly generated password will be used"
      },
      "destination": {
        "path": "",
        "env": "DATABASE_PASSWORD"
      }
    }
  },
  "credentials": {
    "aws-access-key-id": {
      "path": "",
      "env": "AWS_ACCESS_KEY_ID"
    },
    "aws-secret-access-key": {
      "path": "",
      "env": "AWS_SECRET_ACCESS_KEY"
    },
    "kubeconfig": {
      "path": "/root/.kube/config",
      "env": ""
    }
  }
}
-----BEGIN PGP SIGNATURE-----

wsDcBAEBCAAQBQJcBsqRCRB3TuvCCwybvwAAj9gMAIslFveDLN98IqX+mf1mq8Dx
FBx4DOaV1JQqgXj3baEKV/8vv4tkXF1EJbAulZDOASIzknIFYjWJc5ytmzIGCj08
jEtCQQG2j6MwNv+Tzr8azk0YxJnVXeOkhQ89Psq9tNAMGKDeFQQcCcZNhe/7QznE
8fylK772sIgS4DJ4Eq3DbaGdBoaitUsuIOfpe9av77Q6UdZncOXg7i+cVTPBOIzw
S1lGWbCE1AlnqY8ZeWQcYjdjC+ep5bHcjmicazD+F8l5wg3YBJEfqaIIBfzQXNoM
3/cDZ96beo2ZNuhR8DwVVqaW3ku/qs2Q3UPLYRckpyrC6sZ/5ZAI3ROD1MMMlTjE
FU6MusIWo4pxnJ1kAGUFWKTk7W361dMmR9cTK02OkzbW/Tiqv4/CMVWARgJovwz0
fjR3HvxcMXEzx3kdNp/VyN5qAKsWWJtw0iCj3IJ51tPo5jxN0j8wbvBsj+FzRpi/
anQjZNe4oO73oMdipLQ6r9kOTkuigVg8r8Yb8hIa4g==
=ZzVh
-----END PGP SIGNATURE-----
